{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GidGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","submitHandle","e","preventDefault","trim","length","categories","onSubmit","className","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GidGridItem","style","marginBottom","key","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","width","height","role","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAQxCC,EAAe,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAGtB,OACI,0BAAMO,SAAWN,GACb,yBAAKO,UAAU,cACX,2BAAOC,KAAK,OAAOD,UAAU,eAAeE,MAAQX,EAAaY,SAfzD,SAAET,GAClBF,EAAeE,EAAEU,OAAOF,WAgBpB,4BAAQF,UAAU,kBAAkBK,QAAUZ,GAA9C,a,uBCvBCa,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1Ca,QAAQC,IAAIR,GAbO,kBAeZA,GAfY,4CAAH,sDCCPS,EAAc,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAMrC,OAEI,yBAAKT,UAAU,uCAAuCyB,MAN7C,CACTC,aAAc,SAMV,yBAAK1B,UAAU,eAAe2B,IAAMT,GAChC,yBAAKlB,UAAU,eAAe4B,IAAMnB,EAAMoB,IAAMV,IAChD,yBAAKnB,UAAU,aACX,wBAAIA,UAAU,cAAemB,OCVpCW,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdjB,mBAAS,CAC/BwB,KAAM,GACNiB,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACP5B,EAASC,GACR4B,MAAM,SAAAC,GACHH,EAAS,CACLnB,KAAMsB,EACNL,SAAS,SAGlB,CAAExB,IAIEyB,EDhBmBK,CAAc9B,GAAhCO,EAF6B,EAE7BA,KAAMiB,EAFuB,EAEvBA,QAMd,OACI,oCACI,gCAAOxB,EAAP,KAEEwB,GACE,yBAAK/B,UAAU,gBAAgByB,MAV3B,CACZa,MAAO,OACPC,OAAQ,QAQiDC,KAAK,UAClD,0BAAMxC,UAAU,WAAhB,eAIR,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OAEPc,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eAAaU,IAAMV,EAAIC,IAAUD,WEvBhDwB,EAAgB,WAAO,IAAD,EAEKnD,mBAAS,CAAC,cAFf,mBAExBQ,EAFwB,KAEZT,EAFY,KAI/B,OACI,oCACI,6CACA,6BACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQS,EAAWkB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACAoB,IAAMpB,EACNA,SAAWA,U,YCZnCmC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.143f20f4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const valueHandle = ( e ) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const submitHandle = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ submitHandle }>\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" value={ inputValue } onChange={ valueHandle } />\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={ submitHandle }>Agregar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GidGridItem = ({ id, title, url }) => {\r\n\r\n    const card = {\r\n        marginBottom: '25px'\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\" style={ card }>\r\n            <div className=\"card shadow \" key={ id }>\r\n                <img className=\"card-img-top\" src={ url } alt={ title} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{ title }</h5>\r\n                    {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\r\n                    {/* <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GidGridItem } from './GidGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n    const spinner = {\r\n        width: '3rem',\r\n        height: '3rem'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading &&\r\n                <div className=\"spinner-grow \" style={ spinner } role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            }\r\n            \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        data.map( img => (\r\n                            <GidGridItem key={ img.id }  {...img } />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [ category ])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}